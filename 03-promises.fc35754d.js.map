{"version":3,"sources":["js/03-promises.js"],"names":["submitBtn","document","querySelector","firstDelay","delayStep","amount","formSubmit","i","Number","value","allDelay","createPromise","then","position","delay","console","log","catch","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAYC,SAASC,cAAc,yBACnCC,EAAaF,SAASC,cAAe,uBACrCE,EAAYH,SAASC,cAAe,sBACpCG,EAASJ,SAASC,cAAe,wBAKvC,SAASI,IAEF,IAAA,IAAIC,EAAI,EAAGA,EAAIC,OAAOH,EAAOI,OAAQF,GAAK,EAAG,CAC5CG,IAAAA,EAAWF,OAAOL,EAAWM,OAC7BF,EAAI,IACNG,EAAWF,OAAOL,EAAWM,OAAUF,EAAIC,OAAOJ,EAAUK,QAI9DE,EAAcJ,EAAI,EAAGG,GACpBE,KAAK,IAAC,IAAA,SAAEC,EAAF,MAAYC,GAAY,EAC7BC,QAAQC,2BAA2BH,QAAeC,SAEnDG,MAAM,IAAC,IAAA,SAAEJ,EAAF,MAAYC,GAAY,EAC9BC,QAAQC,0BAA0BH,QAAeC,UAMvD,SAASH,EAAcE,EAAUC,GAExB,OAAA,IAAII,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GAElCC,WAAW,KACHH,EACFF,EAAQ,CAACN,SAAAA,EAAUC,MAAAA,IAEnBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,KAEtBA,KAjCXd,EAAUyB,iBAAiB,QAASnB","file":"03-promises.fc35754d.js","sourceRoot":"../src","sourcesContent":["const submitBtn = document.querySelector('button[type = submit]');\nconst firstDelay = document.querySelector ('input[name = delay]');\nconst delayStep = document.querySelector ('input[name = step]');\nconst amount = document.querySelector ('input[name = amount]');\n\n\nsubmitBtn.addEventListener('click', formSubmit)\n\nfunction formSubmit() {\n   \n  for (let i = 0; i < Number(amount.value); i += 1) {\n    let allDelay = Number(firstDelay.value)\n    if (i > 0) {\n      allDelay = Number(firstDelay.value) + (i * Number(delayStep.value))\n    }  \n      \n    \n    createPromise(i + 1, allDelay )\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n }\n}\n\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n        \n        setTimeout(() => {\n            if (shouldResolve) {\n              resolve({position, delay})\n            } else {\n              reject({ position, delay})\n            }\n        }, delay);\n    });\n}\n  \n\n"]}